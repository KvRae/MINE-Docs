{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Indoor Navigation Library for Android","text":"<p>Welcome to the Indoor Navigation Library for Android!  This library provides developers with the tools they need to implement indoor navigation functionality in their  Android applications with ease.</p>"},{"location":"#overview","title":"Overview","text":"<p>Indoor navigation has become increasingly important, especially in environments such as shopping malls, airports, museums, and large buildings where GPS signals may not be reliable. Our library aims to address this challenge by offering a robust solution for integrating indoor navigation capabilities into Android apps.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Seamless Integration: Easily integrate indoor navigation into your Android projects.</li> <li>Customizable Maps: Display detailed indoor maps with custom styling and overlays.</li> <li>Dark/Light Mode: Support for both dark, light and custom map themes .</li> <li>Location Awareness: Utilize indoor positioning systems (IPS) or Bluetooth beacons for accurate location detection.</li> <li>Offline Support: Cache maps and navigation data for offline use, ensuring uninterrupted navigation even without an internet connection.</li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with the Indoor Navigation Library, follow the installation instructions \ud83e\udc55 and refer to the documentation for usage examples.</p>"},{"location":"#resources","title":"Resources","text":"<ul> <li>Api Reference: Module References</li> <li>BitBucket Repository: Module Repository</li> </ul>"},{"location":"#feedback-and-contributions","title":"Feedback and Contributions","text":"<p>We welcome feedback, bug reports, and contributions from the community. Feel free to open an issue on GitHub or submit a pull request if you'd like to contribute to the development of the library.</p>"},{"location":"api_reference/filament/","title":"Filament","text":"<p>Filament is a physically based rendering engine for Android, Windows, Linux, and macOS. It is designed to be as small as possible and as efficient as possible, and is written in C++. MachinNav Engine uses Filament for rendering 3D graphics in the map scene.</p> <p>See the Filament Repository or Filament documentation for more information.</p>"},{"location":"api_reference/module_overview/","title":"Module Overview","text":"<p>The module is built using jetpack compose, and it is designed to be used in a Compose UI. The module is responsible for displaying the map and the navigation components. It also provides a way to customize the map and the navigation components.</p> <p>a clear overview about the architecture of the module and how it's built on top of Sceneview and filament:</p> <pre><code>flowchart BT\n  F[Filament] --&gt;|Renderer| A[Sceneview]\n  A --&gt;|Viewer| B[MINE]</code></pre> Module Architecture Overview <p>The module is built on top of Sceneview and Filament. Sceneview is a 3D and AR View for Android,  Flutter and React Native working with ARCore and Google Filament Engine. Filament is a physically based rendering engine for Android, Windows, Linux, and macOS. It is designed to be as small as possible and as efficient as possible, and is written in C++.</p>"},{"location":"api_reference/scene_view/","title":"Sceneview","text":"<p>3D and AR View for Android, Flutter and React Native working with ARCore and Google Filament Engine. It's a library that allows you to create 3D and AR experiences in your Android, Flutter and React Native applications used in order to create 3D and AR experiences in your applications. In MINE context, Sceneview is used to display the 3D map and the navigation path in the 3D view. Here is some useful information about Sceneview:</p> <ul> <li>Sceneview Website</li> <li>Sceneview Android Repository</li> </ul> <p>For now(as of july 2024) Sceneview does not have a documentation, but you can find some useful information in the Sceneview Website.</p>"},{"location":"features/features_overview/","title":"Features Overview","text":"<p>MachInNav Engine, comes with a wide range of features designed to provide a powerful and easy-to-use navigation experience. Here's an overview of the key features:</p> <ul> <li> <p> Dynamic 3D/2D Environment</p> <p>MachInNav Engine provides a dynamic 3D/2D environment that allows users to navigate indoor spaces with ease. The engine supports both 3D and 2D maps,  providing users with a seamless navigation experience.</p> </li> <li> <p> UI Components Utils</p> <p>MachInNav Engine provides a variety of Ui components to enhance the user's navigation experience. These components are designed to be intuitive and easy to use, providing users with a seamless navigation experience.</p> </li> <li> <p>  Path Finding</p> <p>MachInNav Engine provides a robust path finding feature that allows users to find the most efficient  route to their destination within an indoor environment.</p> </li> <li> <p>  Realtime Navigation</p> <p>MachInNav Engine provides real-time navigation features, guiding users accurately within indoor environments. users can see their current location and the path to their destination in real-time.  The engine also provides turn-by-turn directions to guide users along the way using bluetooth beacons or IPS.</p> </li> </ul> <p> Stay tuned for more detailed information about each feature in the upcoming sections.</p>"},{"location":"features/map_loading/","title":"Map Loading","text":""},{"location":"features/map_loading/#introduction","title":"Introduction","text":"<p>The map loading feature allows you to load a map from a file and display it in the simulator. The map is loaded from a text file that contains a grid of characters, where each character represents a different type of cell. The map can be used to define the layout of the environment in which the robot will operate.</p>"},{"location":"features/map_loading/#map-file-format","title":"Map File Format","text":"<p>The map file is a JSON file that contains a grid of characters. Each character in the grid represents a different type of map component.</p> <p>Note</p> <p>The map file should be placed in the <code>assets</code> folder of the project.</p>"},{"location":"features/map_loading/#map-loading-locally","title":"Map Loading Locally","text":"<p>To load a map from a file, you can use the <code>MapLoader</code> class. The <code>MapLoader</code> class provides a method called <code>loadMap</code> that takes the path to the map file as a parameter and returns a <code>Map</code> object.</p> <p>Here is an example of how to load a map from a file:</p> <pre><code>// Code snippet to load a map from a file\n</code></pre>"},{"location":"features/map_loading/#map-loading-remotely","title":"Map Loading Remotely","text":"<p>To load a map from a remote server, you can use the <code>MapLoader</code> class. The <code>MapLoader</code> class provides a method called <code>loadMapFromUrl</code> that takes the URL of the map file as a parameter and returns a <code>Map</code> object.</p> <p>Here is an example of how to load a map from a remote server:</p> <p><pre><code>// Code snippet to load a map from a remote server\n</code></pre> </p>"},{"location":"features/map_loading/#conclusion","title":"Conclusion","text":"<p>The map loading feature allows you to load a map from a file and display it in the simulator. The map file is a JSON file that contains a grid of characters, where each character represents a different type of cell. The map can be used to define the layout of the environment in which the robot will operate.</p> <p>Tip</p> <p>For more information about the map loading feature, you can refer to the map.json file in the assets folder of the project.</p>"},{"location":"features/navigation/","title":"Navigation","text":"<p>The navigation is a feature that allows the user to navigate through the 3D map, a user marker is placed on the map and the user can move it to any location on the map using bluetooth beacons. Along with beacons, other sensors like accelerometer, gyroscope, and magnetometer are used to provide a better navigation experience to the user. for more accurate navigation, we are adding the steps to the navigation path, so the user can follow the path to reach the destination easily.</p>"},{"location":"features/navigation/#requirements","title":"Requirements","text":"<p>The beacons are used to provide the user's location on the map. Configuring the beacons is a simple process:</p> <ol> <li>Place the beacons in the area where you want to provide navigation.</li> <li>Try to place the beacons in a way that they cover the whole area and at least 3 beacons are visible to the user at any time.</li> <li>Turn on the beacons and make sure they are connected to the device.</li> <li>Add the beacons data to the json file in the assets' folder.</li> </ol> <p>Tip</p> <p>You can find the beacons data example in the beacons.json file in the assets folder of the project.</p> <p>Now you are ready to use the beacons for navigation.</p> <p></p> <p>Note</p> <p>The Positioning of the beacons is important for the accuracy of the navigation. We are following the trilateration method to calculate the user's position on the map. Here is a simple explanation of the trilateration method Trilateration</p>"},{"location":"features/path_finding/","title":"Path Finding","text":"<p>Path finding is the process of finding a path from a starting point to a goal point. This is a common problem in games, where the player needs to navigate through a maze or a map. Path finding algorithms are used to find the shortest path between two points.  There are many different path finding algorithms, each with its own strengths and weaknesses. </p> <p>Some of the most popular path finding algorithms include Dijkstra's algorithm, A algorithm, and Breadth First Search (BFS). In this project, we are using the A algorithm to find the shortest path between two points on the map. The A algorithm is a popular path finding algorithm that is used in many games and applications. It is a heuristic search algorithm that uses an admissible heuristic to find the shortest path between two points. The A algorithm is efficient and can find the shortest path in a reasonable amount of time.</p> <p>The A* algorithm works by maintaining a priority queue of nodes to be explored.  It starts by adding the starting node to the priority queue.  Then, it iteratively explores the nodes in the priority queue until it finds the goal node. At each iteration, the algorithm selects the node with the  lowest cost and expands it by adding its neighbors to the priority queue. </p> <p>The cost of a node is the sum of the cost of the path from the starting node to the current node and the heuristic cost from the current node to the goal node. The A algorithm uses a heuristic function to estimate the cost of the path from the current node to the goal node. The heuristic function is admissible if it never overestimates the cost of the path. The A algorithm guarantees that it will find the shortest path if the heuristic function is admissible.</p>"},{"location":"features/path_finding/#requirements","title":"Requirements","text":"<p>The path finding algorithm requires the following components: - Path Points: The A algorithm requires a set of path points that represent the map. Each path point has a position and a cost. - Point Neighbors: The A algorithm requires a function that returns the neighbors of a given path point.</p>"},{"location":"features/path_finding/#implementation","title":"Implementation","text":"<p>The path finding algorithm is implemented in the <code>NodeExtensions</code> file. The  file provides a method called <code>findPath</code> that takes the starting point, the goal point, and the path points as parameters and returns the shortest path between the starting point and the goal point. Here is an example of how to use the <code>AStar</code> class to find the shortest path between two points: <pre><code>// Code snippet implementing the path finding feature\n</code></pre></p> <p></p>"},{"location":"features/path_finding/#conclusion","title":"Conclusion","text":"<p>Path finding is an important feature in many applications, including games and robotics. The A algorithm is a popular path finding algorithm that is used to find the shortest path between two points. The A algorithm is efficient and can find the shortest path in a reasonable amount of time. In this project, we are using the A algorithm to find the shortest path between two points on the map. The A algorithm requires a set of path points and a function that returns the neighbors of a given path point. The A* algorithm guarantees that it will find the shortest path if the heuristic function is admissible.</p>"},{"location":"features/theme_customization/","title":"Theme Customization","text":"<p>MachInNav Engine supports by default the Light and Dark themes. However, you can customize the theme to match your app's design and branding. This section will guide you through the process of customizing the theme of the MachInNav Engine.</p>"},{"location":"features/theme_customization/#default-theme-colors","title":"Default Theme Colors","text":"<p>The default theme of the MachInNav Engine is a combination of Light and Dark themes. here is the default theme color palette:</p> Theme Ground PathWays Walls Poi selectedPoi Dark #282828 #575757 #282828 #3F3F3F #2D7C32 Light #FDE4E4 #FDE4E4 #888383 #B9B2B2 #779CB7 <p>The default theme colors are used to render the map components such as the ground, pathways, walls, points of interest (POI), and selected POI. The demo below shows the default theme of the MachInNav Engine in action:</p> <p> </p> <p>To achieve this result, you can leave the mapColorTheme parameter empty when initializing the MachInNav Engine The default theme will be applied automatically. Here is an example of how to initialize the MachInNav Engine with the default theme:</p> <pre><code>// Code Implementation for default theme\n</code></pre>"},{"location":"features/theme_customization/#customizing-the-theme","title":"Customizing the Theme","text":"<p>MachInNav Engine allows you to customize the theme colors to match your app's design and branding. The theme customization process involves defining the color palette for the map components such as the ground, pathways, walls, points of interest (POI), and selected POI. Here is an example of how to customize the theme colors:</p> <pre><code>// Code Implementation for custom theme\n</code></pre> <p>In the code snippet above, we use the isSystemInDarkTheme() function to determine the current system theme. Based on the system theme, we define the custom theme color palette for the map components. Finally, we pass the custom theme to the MachInNav Engine by setting the mapColorTheme parameter to customTheme.</p> <p>By customizing the theme colors, you can create a unique and branded navigation experience for your users. The demo below shows the MachInNav Engine with a custom theme in action (Don't Mind the colors, I am not a designer):</p> <p> </p> <p>Hope this helps you understand how important it is to customize the theme of the MachInNav Engine to match your app's design. Don't be like me, pick the right colors for your app's color schema , or you will end up with a mess like the one above. you can also hire a designer to help you with that. </p>"},{"location":"features/ui_components/","title":"UI Components","text":"<p>The MachInNav Engine provides a variety of Ui components to enhance the user's navigation experience. These components are designed to be intuitive and easy to use, providing users with a seamless navigation experience. Here's an overview of the key ui components represented in the diagram below: </p> <pre><code>graph TB\n    A[Map Scene Layout] --&gt; B[Indoor Navigation Scene]\n    A ---&gt; D[UI Utils]\n    D --&gt; E[Top Search Bars]\n    E --&gt; F[SearchBarDropdown]\n    E --&gt; G[SearchBarLayout]\n    D --&gt; H[Navigation Bar]\n    H --&gt; I[Bottom Navigation Bar]\n    D --&gt; J[Bottom Sheets]\n    J --&gt; K[Map Info Bottom Sheet]\n    J --&gt; L[POI Bottom Sheet]\n    J --&gt; M[Saved Locations Bottom Sheet]\n    D --&gt; N[Floating Buttons]\n    N --&gt; O[Current Location Button]\n    N --&gt; P[Map Mode Switch Button]\n</code></pre> UI Components Overview"},{"location":"features/ui_components/#map-scene-layout","title":"Map Scene Layout","text":"<p>The map scene layout is the main view of the indoor environment, providing users with a visual representation of the map and key features such as pathways, walls, points of interest (POI), and other elements. it is a combination of the indoor navigation scene, and the other UI components such as the bottom navigation bar, bottom sheet, search bar layout, and current location button. In the demo below, you can see the map scene layout in action:</p> <p>Here is a code snippet that shows how to use the map scene layout:</p> <pre><code>// Code snippet for Map Scene Layout\n</code></pre>"},{"location":"features/ui_components/#indoor-navigation-scene","title":"Indoor Navigation Scene","text":"<p>The indoor navigation scene provides a detailed view of the indoor environment, including pathways, walls, points of interest (POI), and other key features. In the demo below, you can see the indoor navigation scene in action:</p> <p>Here is a code snippet that shows how to use the indoor navigation scene:</p> <pre><code>// Code snippet for Indoor Navigation Scene\n</code></pre>"},{"location":"features/ui_components/#bottom-navigation-bar","title":"Bottom Navigation Bar","text":"<p>the floor selector allows users to switch between different floors of a building, making it easy to navigate multi-level indoor environments. In the demo below, you can see the floor selector in action: </p> <p> </p> <p>Here is a code snippet that shows how to use the bottom navigation bar</p> <pre><code>// Code snippet for Bottom Navigation Bar\n</code></pre>"},{"location":"features/ui_components/#map-scene-bottom-sheet","title":"Map Scene Bottom Sheet","text":"<p>This bottom sheet provides additional information about the map within the indoor environment, allowing users to view details such as the building name, floor number, and other relevant information. In the demo below, you can see the bottom sheet in action: </p> <p> </p> <p>Here is a code snippet that shows how to use the POI selector:</p> <pre><code>// Code snippet for POI Selector\n</code></pre>"},{"location":"features/ui_components/#building-sheet","title":"Building Sheet","text":"<p>The building sheet provides additional information about the building within the indoor environment, allowing users to view details such as the building name, floor number, and points of interest (POI) within the floor. In the demo below, you can see the building sheet in action:</p> <p></p> <p> </p> <p>Here is a code snippet that shows how to use the building sheet: <pre><code>// Code snippet for Building Sheet\n</code></pre></p>"},{"location":"features/ui_components/#poi-sheet","title":"POI Sheet","text":"<p>The POI sheet provides additional information about the points of interest (POI) within the floor, allowing users to view details such as the POI name, description, opening hours, contacts and other relevant information.</p> <p>In the demo below, you can see the POI sheet in action:</p> <p>Here is a code snippet that shows how to use the POI sheet:</p> <pre><code>// Code snippet for POI Sheet\n</code></pre>"},{"location":"features/ui_components/#saved-locations-sheet","title":"Saved Locations Sheet","text":"<p>The saved locations sheet allows users to view and manage their saved locations within the indoor environment, making it easy to access frequently visited places or points of interest. In the demo below, you can see the saved locations sheet in action:</p> <p>Here is a code snippet that shows how to use the saved locations sheet:</p> <pre><code>// Code snippet for Saved Locations Sheet\n</code></pre>"},{"location":"features/ui_components/#search-bar-layout","title":"Search Bar Layout","text":"<p>The 3D/2D Map switcher button allows users to switch between 3D and 2D views of the map, providing a different perspective of the indoor environment. In the demo below, you can see the 3D/2D Map switcher button in action:</p> <p></p> <p> </p> <p>Here is a code snippet that shows how to use the 3D/2D Map switcher button:</p> <pre><code>// Code snippet for 3D/2D Map switcher button\n</code></pre>"},{"location":"features/ui_components/#search-bar-with-dropdown","title":"Search Bar with Dropdown","text":"<p>The search bar with dropdown allows users to search for specific locations or points of interest (POI) within the indoor environment, providing a quick and easy way to find their desired destination. In the demo below, you can see the search bar with a dropdown in action:</p> <p></p> <p> </p> <p>Here is a code snippet that shows how to use the search bar layout:</p> <pre><code>// Code snippet for 3D/2D Map switcher button\n</code></pre>"},{"location":"features/ui_components/#current-location-button","title":"Current Location Button","text":"<p>The current location button allows users to view their current location within the indoor environment, providing real-time information on their position. In the demo below, you can see the current location button in action:</p> <p>Here is a code snippet that shows how to use the current location button:</p> <pre><code>// Code snippet for Current Location Button\n</code></pre>"},{"location":"features/ui_components/#map-mode-switch-button","title":"Map Mode Switch Button","text":"<p>The map mode switch button allows users to switch between different map modes such as 3D and 2D views, providing a different perspective of the indoor environment. In the demo below, you can see the map mode switch button in action:</p> <p> </p> <p>Here is a code snippet that shows how to use the map mode switch button:</p> <pre><code>// Code snippet for Map Mode Switch Button*\n</code></pre> <p>Each of these UI components plays a crucial role in enhancing the user's navigation experience within the indoor environment, providing intuitive and easy-to-use features that make it easy to navigate and explore the space.</p>"},{"location":"getting_started/installation/","title":"Installation","text":"<p>This guide explains how to install the Indoor Navigation Engine library in your Android project.</p>"},{"location":"getting_started/installation/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have the following prerequisites installed:</p> <ul> <li>Android Studio</li> <li>JDK 17</li> <li>Android SDK with minimum SDK version 24 and target SDK version 34</li> <li>Gradle 8.2</li> </ul>"},{"location":"getting_started/installation/#dependency-installation","title":"Dependency Installation","text":"<p>To integrate the Indoor Navigation Engine library into your Android project, follow these steps:</p>"},{"location":"getting_started/installation/#gradle","title":"Gradle","text":"<ol> <li>Open your project's <code>build.gradle</code> file.</li> <li>Add the following dependency in the <code>dependencies</code> block:</li> </ol> Groovy DSLKotlin DSL <pre><code>    dependencies {\n      implementation 'com.machinestalk:indoornavigationengine:1.0.0'\n    }\n</code></pre> <pre><code>    dependencies {\n      implementation(\"com.machinestalk:indoornavigationengine:1.0.0\")\n    }\n</code></pre>"},{"location":"getting_started/installation/#maven","title":"Maven","text":"<ol> <li>Open your project's <code>pom.xml</code> file.</li> <li> <p>Add the following dependency:</p> <pre><code>&lt;dependency&gt;\n    &lt;groupId&gt;com.machinestalk&lt;/groupId&gt;\n    &lt;artifactId&gt;indoornavigationengine&lt;/artifactId&gt;\n    &lt;version&gt;1.0.0&lt;/version&gt;\n    &lt;type&gt;pom&lt;/type&gt;\n&lt;/dependency&gt;\n</code></pre> </li> </ol> <p>Java 17 Required</p> <p>this library uses Filament a native library written in C++ for rendering 3D graphics, its api is exposed to Java using JNI, and the JNI api is compiled with Java 17, so you need to compile your project with Java 17.  Ensure your <code>build.gradle</code> file is configured accordingly:</p> <pre><code>compileOptions {\n    sourceCompatibility JavaVersion.VERSION_17\n    targetCompatibility JavaVersion.VERSION_17\n} \nkotlinOptions {\n    jvmTarget = '17'\n}\n</code></pre>"},{"location":"getting_started/quick_start/","title":"Quick Start","text":"<p>Welcome to the Indoor Navigation Library for Android! This library is designed to simplify the process of implementing indoor navigation functionality in Android applications. Whether you're building a mapping application for a shopping mall, museum, or any indoor space, our library provides the tools you need to create a seamless navigation experience for your users.</p>"},{"location":"getting_started/quick_start/#key-features","title":"Key Features","text":"<ul> <li>Easy Integration: Seamless integration into your existing Android projects with minimal setup required.</li> <li>Customizable Maps: Display detailed indoor maps with support for custom styling and overlays.</li> <li>Navigation Assistance: Provide step-by-step navigation instructions to guide users to their destinations.</li> <li>Location Awareness: Utilize indoor positioning systems (IPS) or Bluetooth beacons to accurately determine the user's location.</li> <li>Offline Support: Cache maps and navigation data for offline use, ensuring uninterrupted navigation even without an internet connection.</li> </ul>"},{"location":"getting_started/quick_start/#prerequisites","title":"Prerequisites","text":"<p>Before getting started with the Indoor Navigation Library, ensure that you have the following:</p> <ul> <li>Android Studio installed on your development machine.</li> <li>A basic understanding of Android app development and Java/Kotlin programming.</li> <li>Access to indoor maps or floor plans for the desired navigation area.</li> <li>Optional: Indoor positioning system (IPS) or Bluetooth beacons for enhanced location accuracy.</li> </ul>"},{"location":"getting_started/usage/","title":"Using MINE Library","text":"<p>This guide will walk you through the process of integrating and utilizing the Indoor Navigation Engine library in your Android projects.</p>"},{"location":"getting_started/usage/#prerequisites","title":"Prerequisites","text":"<p>Now that you've added the library to your project, let's explore how to use it:</p>"},{"location":"getting_started/usage/#1-initialize-the-map-scene","title":"1. Initialize the Map Scene","text":"<p>First, you need to initialize the map scene in your activity or fragment. Here's a basic example using Compose:</p> <pre><code>@Composable\nfun MapScene() {\n    // Define map scene components here\n}\n</code></pre>"},{"location":"getting_started/usage/#2-load-map-data","title":"2. Load Map Data","text":"<p>Next, you need to load the map data for the desired location. For that you will need to add the json file to the assets folder and load it using the following code:</p> <pre><code>val mapData = JsonUtil.LoadJsonFromAsset(context, \"map.json\")\n</code></pre>"},{"location":"getting_started/usage/#2-add-map-components-to-the-scene","title":"2. Add Map Components to the Scene","text":"<p>You can customize various aspects of the map components such as theme, camera configuration, and map build. Here's an example of how to add these components to the map scene:</p> <pre><code>IndoorNavigationScene(\n     mapBuild = mapData,\n)\n</code></pre> <p>by default the scene will display the map with the first floor, it also takes the default theme and camera configuration.</p>"},{"location":"release_notes/0.1.0_alpha/","title":"Release Notes for Alpha 1 (build 0.1.0)","text":""},{"location":"release_notes/0.1.0_alpha/#version-010","title":"Version 0.1.0","text":""},{"location":"release_notes/0.1.0_alpha/#date-2024-02-16","title":"Date: 2024-02-16","text":""},{"location":"release_notes/0.1.0_alpha/#new-features","title":"New Features","text":"<ul> <li>Added 3D/2D environment generation</li> <li>Json file parsing for 3D/2D environment generation</li> </ul>"},{"location":"release_notes/0.1.0_alpha/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed issue with 3D/2D environment generation</li> <li>Fixed issue with Json file parsing when json file is empty</li> </ul>"},{"location":"release_notes/0.1.0_alpha/#known-issues","title":"Known Issues","text":"<ul> <li>Issue with 3D/2D environment generation on low-end devices</li> <li>Issue with module performance on low-end devices</li> <li>Issue with gestures / touch events on 3D/2D environment</li> </ul>"},{"location":"release_notes/0.2.1_alpha/","title":"Release Notes for Alpha 2 (build 0.2.1)","text":""},{"location":"release_notes/0.2.1_alpha/#version-021","title":"Version 0.2.1","text":""},{"location":"release_notes/0.2.1_alpha/#date-2024-07-15","title":"Date: 2024-07-15","text":""},{"location":"release_notes/0.2.1_alpha/#new-features","title":"New Features","text":"<ul> <li>Added UI components utilities</li> <li>Added 3D/2D Map switcher button</li> <li>Added Search Bar Layout</li> <li>Added Search Bar with Dropdown</li> <li>Added Current Location Button</li> <li>Added support for custom UI components</li> <li>Added support for Dark/Light mode</li> <li>Added support for custom themes</li> </ul>"},{"location":"release_notes/0.2.1_alpha/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed issue with UI components utilities display</li> <li>Fixed issue with 3D/2D Map switcher button utilities</li> </ul>"},{"location":"release_notes/0.2.1_alpha/#known-issues","title":"Known Issues","text":"<ul> <li>Issue with Bottom Sheet layout on small screens</li> <li>Issue with Search Bar Layout position on medium screens</li> </ul>"},{"location":"release_notes/0.3.2_alpha/","title":"Release Notes for Alpha 3 (build 0.3.2)","text":""},{"location":"release_notes/0.3.2_alpha/#version-032","title":"Version 0.3.2","text":""},{"location":"release_notes/0.3.2_alpha/#date-2024-07-30","title":"Date: 2024-07-30","text":""},{"location":"release_notes/0.3.2_alpha/#new-features","title":"New Features","text":"<ul> <li>Added Path finding utilities</li> <li>Added Path finding algorithm</li> <li>Added Path finding UI components</li> <li>Added support for custom Path finding algorithms</li> <li>Optimized Path finding algorithm for better performance</li> </ul>"},{"location":"release_notes/0.3.2_alpha/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed issue with Path finding algorithm</li> <li>Fixed issue with Path finding UI not displaying correctly</li> <li>Fixed issue with Path finding JSON parsing when json file is empty</li> </ul>"},{"location":"release_notes/0.3.2_alpha/#known-issues","title":"Known Issues","text":"<ul> <li>None</li> </ul>"},{"location":"release_notes/0.4.0_alpha/","title":"Release Notes for Alpha 4 (build 0.4.0)","text":""},{"location":"release_notes/0.4.0_alpha/#version-040","title":"Version 0.4.0","text":""},{"location":"release_notes/0.4.0_alpha/#date-2024-07-11","title":"Date: 2024-07-11","text":""},{"location":"release_notes/0.4.0_alpha/#new-features","title":"New Features","text":"<ul> <li>Added support user navigation feature</li> <li>Added support for user navigation UI Utilities</li> <li>Added support for user directions and instructions</li> <li>Added support for user location tracking</li> <li>Added permission handling for user location tracking</li> </ul>"},{"location":"release_notes/0.4.0_alpha/#bug-fixes","title":"Bug Fixes","text":"<ul> <li>Fixed issue with user navigation feature not displaying correctly</li> <li>Fixed issue of Poi interaction memory leak</li> <li>Fixed issue with user location tracking not updating correctly</li> <li>Fixed issue with user directions and instructions not displaying correctly</li> </ul>"},{"location":"release_notes/0.4.0_alpha/#known-issues","title":"Known Issues","text":"<ul> <li>Scene rendering issue on low-end devices</li> </ul>"},{"location":"release_notes/release_notes/","title":"Release Notes","text":"<p>This section provides information about the release notes for the Indoor Navigation Engine (MINE) library.  The release notes include details about the new features, bug fixes, and known issues for each version of the library.</p> Release Version Date Description Alpha 1 0.1.0 2024-02-16 Added 3D/2D environment generation feature Alpha 2 0.2.1 2024-04-15 Added UI components utilities feature Alpha 3 0.3.2 2024-06-09 Added Path finding utilities feature Alpha 4 0.4.0 2024-07-11 Added support user navigation feature <p>For more information about the release notes, contact the development team at contactUs.</p>"},{"location":"support/contact_us/","title":"Contact Us","text":"<p>MINE is developed as an internship project at Machinestalk by Karam Mannai and Mohamed Kalech.  For the moment, the project is internal and not available for public use, the development process is still ongoing and the project is not yet ready for production. For more information about the project, you can contact our maintainers.</p>"},{"location":"support/contact_us/#maintainers","title":"Maintainers","text":"<p>the project is maintained by a team of software engineers, who are responsible for the development and maintenance of the project. The team is composed of the following members:</p> Karam Mannai Android Engineer Wissal Zammouri Android Developer Nassim Boussami Android Engineer"},{"location":"support/contact_us/#acknowledgements","title":"Acknowledgements","text":"<p>We would like to thank the rest of the mobile team at Machinestalk for their support and guidance throughout the development process.</p> Mohamed Kalech IOS Engineer El Moez Amira IOS Engineer Ahmed Mahouachi Mobile Engineer Nerimene Brahim IOS Engineer"},{"location":"support/contact_us/#in-the-end","title":"In The End","text":"<p>We hope that you find this project interesting and useful. If you have any questions or feedback, please feel free to contact us. We are always happy to hear from you. Always remember: </p> <p>Quote</p> <p>\"Life is not fair, make use of it  \" - Karam Mannai</p>"},{"location":"support/faq/","title":"Frequently Asked Questions (FAQ)","text":"<ol> <li>How do I get started with the project?<ul> <li>You can get started with the project by following the steps mentioned in the Getting Started section of the documentation.</li> <li>The Quick Start guide provides a step-by-step tutorial on how to set up the project and start using the library in your Android application.</li> <li>If you encounter any issues during the setup process, feel free to reach out to us for assistance.</li> </ul> </li> <li>What are the key features of the Indoor Navigation Library?<ul> <li>The Indoor Navigation Library offers a range of features to help developers implement indoor navigation functionality in their Android applications. Some of the key features include:<ul> <li>Seamless Integration: Easily integrate indoor navigation into your Android projects.</li> <li>Customizable Maps: Display detailed indoor maps with custom styling and overlays.</li> <li>Dark/Light Mode: Support for both dark, light, and custom map themes.</li> <li>Location Awareness: Utilize indoor positioning systems (IPS) or Bluetooth beacons for accurate location detection.</li> <li>Offline Support: Cache maps and navigation data for offline use, ensuring uninterrupted navigation even without an internet connection.</li> </ul> </li> </ul> </li> <li>How can I contribute to the development of the library?<ul> <li>Unfortunately, we are not accepting contributions at this time. However, we welcome feedback and bug reports from the community. If you encounter any issues while using the library, please feel free to open an issue on GitHub or reach out to us for assistance.</li> </ul> </li> <li>Where can I find the API reference for the library?<ul> <li>You can find the API reference for the library by visiting the Module References page. The API reference provides detailed information about the classes, methods, and interfaces available in the library.</li> </ul> </li> <li>Is the Indoor Navigation Library free to use?<ul> <li>Not at the moment. The Indoor Navigation Library is currently available as a paid service, and you will need to purchase a license to use the library in your Android applications. For more information about pricing and licensing options, please contact us directly.</li> <li>We are also working on a free version of the library that will be available for open-source projects and non-commercial use. Stay tuned for updates on the release of the free version.</li> </ul> </li> <li>Are there any plans to add support for Kotlin Multiplatform?<ul> <li>Unfortunately, we do not have any immediate plans to add support for Kotlin Multiplatform. However, we are constantly evaluating new technologies and frameworks to enhance the library's capabilities. If there is sufficient demand for Kotlin Multiplatform support, we may consider adding it in future releases.</li> <li>If you have any specific requirements or feature requests, please feel free to reach out to us with your suggestions. We value feedback from the community and are always looking for ways to improve the library.</li> </ul> </li> <li>Does the library support K2?<ul> <li>Yes, the Indoor Navigation Library fully supports Kotlin 2 (K2) and is compatible with the latest version of the Kotlin programming language. You can use the library with K2 to build modern Android applications with ease.</li> <li>If you encounter any issues while using the library with K2, please let us know so that we can address them promptly. Your feedback is important to us, and we strive to provide a seamless development experience for all users.</li> </ul> </li> </ol>"},{"location":"support/troubleshooting/","title":"Troubleshooting","text":"<p>This page contains a list of common issues and their solutions.</p>"},{"location":"support/troubleshooting/#issue-1-map-file-not-found","title":"Issue 1: Map file not found","text":"<p>When loading a map, you may encounter this issue if the map file is not found or the path is incorrect.  To resolve this issue, make sure that the map file is located in the correct directory  and that the path is specified correctly in the code.</p> <pre><code>val mapPath = \"path/to/map/file\"\nval map = MapLoader.loadMap(mapPath)\n</code></pre>"},{"location":"support/troubleshooting/#issue-2-navigation-is-not-working","title":"Issue 2: Navigation is not working","text":"<p>If navigation is not working, check the following:</p> <ul> <li>Ensure that you set up the beacons correctly.</li> <li>Make sure that the beacons are in range and have a clear line of sight.</li> <li>Verify beacons data in the json file.</li> </ul> <p>if the issue persists, please refer to the documentation for more information on setting up navigation.</p>"}]}